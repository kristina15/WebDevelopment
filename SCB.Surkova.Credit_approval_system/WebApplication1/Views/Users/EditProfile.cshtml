@using WebApplication1.Models.UserVMs;
@using WebApplication1.Models;
@model EditUserVM

@{
    ViewBag.Title = "EditProfile";
}

<br />
@using (Html.BeginForm("EditProfile", "Users", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    <div class="form-group">
        <b>
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        </b>
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <b>
            @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
        </b>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <b>
            @Html.LabelFor(model => model.Patronymic, htmlAttributes: new { @class = "control-label col-md-2" })
        </b>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Patronymic, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Patronymic, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <b>
            @Html.LabelFor(model => model.Passport.Series, htmlAttributes: new { @class = "control-label col-md-2" })
        </b>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Passport.Series, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Passport.Series, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <b>
            @Html.LabelFor(model => model.Passport.Number, htmlAttributes: new { @class = "control-label col-md-2" })
        </b>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Passport.Number, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Passport.Number, "", new { @class = "text-danger" })
        </div>
    </div>

        <form action="~/Controllers/Scan/Create" method="post">
        <div class="form-group">
            <b>
                @Html.LabelFor(model => model.Passport.Scans, htmlAttributes: new { @type = "file" })
            </b>
            <div class="col-md-10">
                @if (Model.Passport.Scans != null)
                {
                    foreach (var item in Model.Passport.Scans)
                    {
                        <img src="@String.Format("data:image/jpg;base64,{0}", Convert.ToBase64String(item.Image))" class="image" />
                        <br />
                    }
                }
            </div>
            <div>
                <input type="file" name="passportImage" multiple="multiple" />
            </div>
        </div>

        <div class="form-group">
            <b>
                @Html.LabelFor(model => model.AdditionalFile, htmlAttributes: new { @class = "control-label col-md-2" })
            </b>
            <div class="col-md-10">

                @if (Model.AdditionalFile != null)
                {
                    <img src="@String.Format("data:image/jpg;base64,{0}", Convert.ToBase64String(Model.AdditionalFile.Image))" style="width:100px; height:120px" />
                }
                else
                {
                    <div class="form-group">
                        Additional scan type
                        <div>
                            @Html.DropDownList("types", new SelectList(new string[] { ScanTypes.Snils, ScanTypes.DriverLicence }))
                        </div>
                    </div>
                }
            </div>
            <div>
                <input type="file" name="additionalImage" />
            </div>
        </div>
    </form>

        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
                @Html.ActionLink("Back to profile", "GetProfile", "Users", null, new { @class = "btn btn-primary" })
            </div>
        </div>
</div>
      }

